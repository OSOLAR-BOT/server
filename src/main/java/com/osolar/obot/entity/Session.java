package com.osolar.obot.entity;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.osolar.obot.entity.enums.SessionStatus;
import lombok.Builder;
import lombok.Getter;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

@Getter
@DynamoDBTable(tableName = "session")
public class Session {

    private static final DateTimeFormatter formatter = DateTimeFormatter.ISO_LOCAL_DATE_TIME;

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String userId;

    @DynamoDBAttribute
    private String sessionStatus;

    @DynamoDBAttribute
    private String createdAt;

    @DynamoDBAttribute
    private String updatedAt;

    @DynamoDBAttribute
    private String endedAt;

/*-------------------- Constructors --------------------*/

    protected Session() {}

    @Builder
    public Session(
            String id,
            String userId,
            SessionStatus sessionStatus,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            LocalDateTime endedAt
    ) {
        this.id = id;
        this.userId = userId;
        this.sessionStatus = sessionStatus != null ? sessionStatus.toString() : null;
        this.createdAt = createdAt != null ? createdAt.format(formatter) : null;
        this.updatedAt = updatedAt != null ? updatedAt.format(formatter) : null;
        this.endedAt = endedAt != null ? endedAt.format(formatter) : null;
    }

/*-------------------- Methods --------------------*/

}
